import type { Meta, StoryObj } from '@storybook/react'
import { Formik, Form, Field } from 'formik'
import { z } from 'zod'
import { toFormikValidationSchema } from 'zod-formik-adapter'
import { Select as SelectComponent, SelectProps } from '@/components/ui/Select'
import { Size } from '@/types/size'

const schema = z.object({
  select: z.string().min(1, 'Please select an option').default(''),
})

const meta: Meta<SelectProps> = {
  title: 'UI',
  component: SelectComponent,
  args: {
    label: 'Select',
    name: 'select',
    size: Size.Large,
    options: [
      { label: 'Option 1', value: 'option1' },
      { label: 'Option 2', value: 'option2' },
      { label: 'Option 3', value: 'option3' }
    ]
  },
  argTypes: {
    size: {
      control: {
        type: 'select',
      },
      options: Object.values(Size),
    },
  }
}

export default meta

type Story = StoryObj<SelectProps>

export const Select: Story = {
  render: (args: SelectProps) => (
    <div className="padding">
      <Formik
        initialValues={{
          select: '',
        }}
        validationSchema={toFormikValidationSchema(schema)}
        onSubmit={async (values) => {
          await new Promise((r) => setTimeout(r, 500));
          alert(JSON.stringify(values, null, 2));
        }}
      >
        <Form>
          <Field component={SelectComponent} {...args} />
        </Form>
      </Formik>
    </div>
  )
}
