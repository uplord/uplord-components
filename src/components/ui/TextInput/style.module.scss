@use '../../../styles/includes' as *;

.fields {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
}

.outer {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
  padding: 0.96875rem 0.96875rem;
  line-height: 1.4375rem;
  background-color: $color-bg;
  border: 1px solid $color-border;
  border-radius: 0.5rem;
  outline: 2px solid transparent;
  outline-offset: -2px;
  transition: background-color 0.2s ease-in-out,
    border-color 0.2s ease-in-out,
    color 0.2s ease-in-out
    outline 0.2s ease-in-out;

  &:hover:not(.is-disabled, .is-error, &:has(.button:hover, .click:hover)) {
    background: #f7f7f7;
    cursor: text;
  }

  &:focus-within:not(:has(.button:focus, .click:focus)) {
    background: #f7f7f7;
    outline-color: #222222;
  }

  &.is-disabled {
    background-color: #dddddd;
  }

  &.is-loading,
  &.is-ghost {
    position: relative;
    background-color: transparent;
    border-color: transparent;

    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-radius: 0.5rem;
      transition: all 0.2s ease-in-out;
    }
  }

  &.is-loading:after {
    background-color: #f7f7f7;
    border: 1px solid $color-border;
  }

  &.is-ghost:after {
    animation: ghost 1.4s linear infinite;
  }

  &.is-error:not(.is-disabled, .is-loading, .is-ghost) {
    background-color: $color-error-01;
    border-color: $color-error-02;

    &:focus-within:not(:has(.button:focus, .click:focus)) {
      background-color: $color-error-01;
      outline-color: $color-error-02;
    }

    .input + .placeholder,
    & + .helper,
    .icon,
    .text {
      color: $color-error-02;
    }
  }
}

.inner {
  position: relative;
  flex: 1;
}

.input {
  position: relative;
  width: 100%;
  background: transparent;
  color:  $color-text;
  font-size: 1rem;
  line-height: inherit;
  transition: all 0.2s ease-in-out;

  &:focus {
    outline: 0;
  }

  &:focus,
  &:not(:placeholder-shown) {
    top: 0.46875rem;

    .no-label & {
      top: 0;
    }

    & + .placeholder {
      font-size: 0.75rem;
      line-height: 0.875rem;
      padding: 0;
      top: -0.40625rem;
      color: $color-placeholder;
    }
  }

  & + .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    font-size: 1rem;
    line-height: 1.4375rem;
    padding: 0;
    color: $color-placeholder;
    transition: all 0.2s ease-in-out;
    pointer-events: none;
  }
}

.icon {
  color: $color-text;
  transition: color 0.2s ease-in-out;
}

.text {
  color: $color-placeholder;
  transition: color 0.2s ease-in-out;
}

.button {
  margin: -0.375rem -0.375rem -0.375rem 0;

  &:hover {
    cursor: pointer;
  }
}

.click {
  margin: -1.125rem 0;
  padding: 1.125rem 0;

  &:hover {
    cursor: pointer;
  }
}

.helper {
  font-size: 0.75rem;
  line-height: 0.875rem;
  color: $color-placeholder;
  transition: color 0.2s ease-in-out;
}

.loading {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  animation: rotate-loading 2s linear infinite;
  z-index: 1;
  color: $color-text;
}

input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
  -webkit-box-shadow: 0 0 0px 1000px $color-bg inset !important;
  box-shadow: 0 0 0px 1000px $color-bg inset !important;
  transition: background-color 5000s ease-in-out 0s;
}

